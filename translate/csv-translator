#!/usr/bin/env python

import csv
import subprocess
import sys

CHUNK_SIZE = 500
ENCODE_CHAR = '|'

usage = 'usage: %s /path/to/input_csv /path/to/output_csv' % sys.argv[0]
if not len(sys.argv) > 2:
   print usage
   sys.exit(1)

try:
   infile, outfile = sys.argv[1:]
except ValueError:
   print 'error reading arguments'
   print usage
   sys.exit(1)

cnt = 0
def translate(phrase):
   global cnt
   cnt += 1
   return subprocess.check_output(['en2pt', phrase]).strip()

with open(infile, 'r') as csv_infile:
   reader = csv.reader(csv_infile)
   source_rows = set([row[0] for row in reader])
   # space out the fragments becuase the translator
   # works better with punctuation this way
   encoded = ('  ' + ENCODE_CHAR + '  ').join(source_rows)

translated = ""
while encoded:
   lastidx = idx = 0
   while idx < CHUNK_SIZE:
      lastidx = idx
      idx = encoded.find(ENCODE_CHAR, lastidx+1)
      if idx == -1:
         lastidx = len(encoded)
         break
   chunk = encoded[:lastidx]
   translated += translate(chunk)
   encoded = encoded[lastidx:]

out_rows = map(lambda s: s.strip(), translated.split(ENCODE_CHAR))
with open(outfile, 'w') as csv_outfile:
   writer = csv.writer(csv_outfile, quoting=csv.QUOTE_ALL)
   writer.writerows(zip(source_rows, out_rows))

print 'made %s translations' % cnt
